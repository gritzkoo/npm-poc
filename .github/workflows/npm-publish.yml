# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: test

on:
  - workflow_dispatch
  - push
  # - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm test

  validate:
    name: check version is valid to release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Validate if can be published
        run: |
          REVIEW_JS=`npm view --json`
          ATUAL_VERSION=`cat package.json | jq '.version'`
          if [[ `echo ${REVIEW_JS} | jq -c '.versions[]'` ]]; then
            echo ${REVIEW_JS} | jq -c '.versions[]' | while read line; do
              if [ "${line}" == "${ATUAL_VERSION}" ]; then
                echo "$line is equals to ${ATUAL_VERSION}"
                echo "Version already released!"
                exit 1
              fi
            done
          else
            echo "all clear to go"
          fi

  publish-gpr:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
      - validate
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create Release
        run: |
          NEW_TAG=`cat package.json | jq -cr ".version"`
          NOTES=`git show -s --format="%s%n%n%b"`
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh release create "v${NEW_TAG}" --title "v${NEW_TAG}" --notes "${NOTES}"
